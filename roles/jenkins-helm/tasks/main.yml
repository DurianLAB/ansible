# tasks/main.yml

- name: 1. Install kubernetes.core collection if not present
  ansible.builtin.command: ansible-galaxy collection install kubernetes.core
  register: install_result
  changed_when: "'already installed' not in install_result.stdout"
  failed_when: install_result.rc != 0 and 'already installed' not in install_result.stdout
  delegate_to: localhost

- name: 2. Ensure the Helm chart repository is configured
  ansible.builtin.debug:
    msg: "Ensure you have the 'kubernetes.core' collection installed: ansible-galaxy collection install kubernetes.core"

- name: 3. Add the Jenkins Helm Repository
  kubernetes.core.helm_repository:
    name: "{{ jenkins_repo_name }}"
    repo_url: "{{ jenkins_repo_url }}"
    state: present

- name: 4. Deploy or Upgrade the Jenkins Helm Chart
  kubernetes.core.helm:
    name: "{{ jenkins_helm_release_name }}"
    chart_ref: "{{ jenkins_repo_name }}/{{ jenkins_chart_name }}"
    release_namespace: "{{ jenkins_helm_namespace }}"
    release_state: present
    create_namespace: "{{ jenkins_helm_create_namespace }}"
    # Use default({}) to ensure 'values' is an empty dict if not defined, avoiding errors
    values: "{{ jenkins_helm_values | default({}) }}"
    wait: "{{ jenkins_helm_wait }}"
    wait_timeout: "{{ jenkins_helm_wait_timeout }}"

- name: 5. Explicitly create Namespace (Recommended for clearer k8s task reporting)
  kubernetes.core.k8s:
    name: "{{ jenkins_helm_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when: jenkins_helm_create_namespace
  tags: verify_namespace

- name: 6. Verify Jenkins deployment by checking pods
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ jenkins_helm_namespace }}"
    label_selectors:
      - app.kubernetes.io/name=jenkins
  register: jenkins_pods

- name: 7. Display Jenkins pod status
  ansible.builtin.debug:
    msg: "Jenkins pods: {{ jenkins_pods.resources | map(attribute='status.phase') | list }}"